library(Seurat)
library(SeuratDisk)
library(ggplot2)
library(patchwork)

batch_var = "DataID"
normalization.method = "SCT"
k_anchor = 5
npcs.use=100
assay.use = "RNA"

PREFIX="Control"

options(future.globals.maxSize = 198000 * 1024^2) # for 50 Gb RAM

obj = readRDS(file="./Control.selected.rds")

############## Find anchors using CCA #############################

DefaultAssay(obj) = assay.use

obj = NormalizeData(obj)

objlist <- SplitObject(obj, split.by = batch_var)

objlist <- lapply(X = objlist, FUN = function(x) {
    x <- SCTransform(x, assay=assay.use, vars.to.regress = c("S.Score","G2M.Score","pMT"), verbose = FALSE)
})

features <- SelectIntegrationFeatures(object.list = objlist, nfeatures = 2000)
objlist <- PrepSCTIntegration(object.list = objlist, anchor.features = features)

objlist <- lapply(X = objlist, FUN = function(x) {
  x <- RunPCA(x, features = features, npcs=npcs.use, verbose = FALSE)
})

obj.anchors <- FindIntegrationAnchors(object.list = objlist, anchor.features = features, reduction = 'cca',
                                      normalization.method = normalization.method,
                                      k.anchor = k_anchor, l2.norm = TRUE)

saveRDS(obj.anchors, file=paste0(PREFIX, ".anchors.rds"))


  
######## Integrate data #################################

combined = NULL
combined <- IntegrateData(anchorset = obj.anchors, normalization.method = normalization.method, k.weight=100)

DefaultAssay(combined) <- "integrated"

combined <- RunPCA(combined, npcs = npcs.use, verbose = FALSE)
combined <- RunUMAP(combined, reduction = "pca", dims = 1:npcs.use, return.model = T, seed.use=123L, min.dist=0.3)

# Visualization
p1 <- DimPlot(combined, reduction = "umap", group.by = batch_var, pt.size=0.001)
ggsave(file=paste0(PREFIX, ".umap.tiff"), plot=p1, width=6.5, height=5, dpi=300, units="in", compression="lzw")

p1 <- DimPlot(combined, reduction = "umap", group.by = batch_var, pt.size=0.001)
ggsave(file=paste0(PREFIX, ".umap.tiff"), plot=p1, width=6.5, height=5, dpi=300, units="in", compression="lzw")

DefaultAssay(combined) = "RNA"
g = FeaturePlot(combined, reduction="umap", features=c("COL1A1","COL1A2","ACTA2","PECAM1",  
                                                       "CLDN5","CDH5","SFTPB",  
                                                       "EPCAM", "CDH1","UPK3B","WT1",  "PTPRC","HBB","ITGB3",
                                                       "MKI67","TOP2A"), pt.size=0.001,
                cols=c("grey90","darkblue"))
ggsave(file=paste0(PREFIX, ".markers.rna.tiff"), width=20, height=18, dpi=300, units="in", compression="lzw")

saveRDS(combined, file=paste0(PREFIX, ".CCA.rds"))


######### Leiden clustering #################################
  
combined = FindNeighbors(combined, reduction = "pca", dims=1:npcs.use, nn.method = "annoy", annoy.metric = "cosine")

for (res in seq(0.6, 4, 0.2)) {
  combined = FindClusters(combined, graph.name="integrated_nn", resolution = res, algorithm=4, method="igraph")

  g = DimPlot(combined, reduction = "umap", label=T, label.size=5, group.by=paste0("integrated_nn_res.", res))

  ggsave(file=paste0(PREFIX, ".leiden.", res, ".tiff"), width=8, height=6, dpi=300, units="in", compression="lzw")
}


saveRDS(combined, file=paste0(PREFIX, ".clusters.rds"))


